package com.treeze.downloadthread;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import com.google.gson.Gson;import com.treeze.data.ClassInfo;import com.treeze.data.JsonTicket;import com.treeze.data.MindNode;import com.treeze.data.Ticket;import com.treeze.data.TreezeStaticData;import com.treeze.frame.TicketInfo;public class DownLoadAllTicket extends Thread {	// HttpResponse response;	// InputStream is;	URL url = null;	String ip = TreezeStaticData.IP;	// Message msg = new Message();	StringBuffer sbResult = new StringBuffer();	ClassInfo classInfo;	public DownLoadAllTicket(ClassInfo classInfo) {		// TODO Auto-generated constructor stub		this.classInfo = classInfo;	}	@Override	public void run() {		HttpURLConnection connection;		sbResult.delete(0, sbResult.capacity());		try {			url = new URL("http://" + ip					+ ":8080/treeze/getAllTickets?classId="					+ classInfo.getClassId());			connection = (HttpURLConnection) url.openConnection();			if (connection != null) {				connection.setConnectTimeout(5000); // Set Timeout				connection.setUseCaches(false);				if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {					BufferedReader br = new BufferedReader(							new InputStreamReader(connection.getInputStream(),									"UTF-8"));					String strLine = null;					while ((strLine = br.readLine()) != null) {						sbResult.append(strLine + "\n");					}					br.close();				}				connection.disconnect();				Gson gson = new Gson();				JsonTicket ticket = gson.fromJson(sbResult.toString(), JsonTicket.class);				System.out.println(sbResult.toString());				for(int i=0;i<ticket.getTicket().size();i++){					MindNode parentNode =  MindNode.getNodeuseNodeID(MindNode.getRoot(),ticket.getTicket().get(i).getParentNodeId());					new Ticket(parentNode,ticket.getTicket().get(i).getId()+"" ,ticket.getTicket().get(i).getContents(), ticket.getTicket().get(i).getUserName());				}				// networkHandler.sendMessage(msg);			}		} catch (IOException e) {			// TODO Auto-generated catch block			//			e.printStackTrace();			DownLoadAllTicket networkThread = new DownLoadAllTicket(classInfo);			networkThread.start();		}	}}